{"ast":null,"code":"var _jsxFileName = \"D:\\\\map\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIconUrl from './marker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  // Состояние переменных\n  const [markers, setMarkers] = useState([\n  // Исходные маркеры\n  {\n    name: 'ТЦ Горизонт',\n    coordinates: [47.259301, 39.719791]\n  }, {\n    name: 'ИВТиПТ',\n    coordinates: [47.218953, 39.627433]\n  }, {\n    name: 'Библиотека',\n    coordinates: [47.228379, 39.726662]\n  }, {\n    name: 'Правительство Ростовской области',\n    coordinates: [47.220835, 39.720871]\n  }, {\n    name: 'Собор Пресвятой Богородицы',\n    coordinates: [47.217253, 39.712026]\n  }]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  useEffect(() => {\n    // Загрузка маркеров из localStorage или использование исходных маркеров\n    const storedMarkers = JSON.parse(localStorage.getItem('markers')) || markers;\n    setMarkers(storedMarkers);\n\n    // Инициализация карты Leaflet\n    const map = L.map('map').setView([47.2357, 39.7015], 12);\n\n    // Добавление слоя тайлов OpenStreetMap\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      maxZoom: 20\n    }).addTo(map);\n\n    // Создание пользовательской иконки маркера\n    const markerIcon = L.icon({\n      iconUrl: markerIconUrl,\n      iconSize: [32, 40]\n    });\n\n    // Добавление маркеров на карту\n    storedMarkers.forEach(markerData => {\n      const {\n        name,\n        coordinates\n      } = markerData;\n      const marker = L.marker(coordinates, {\n        icon: markerIcon\n      }).addTo(map);\n      marker.bindPopup(name);\n    });\n\n    // Функция очистки для удаления карты при размонтировании компонента\n    return () => {\n      map.remove();\n    };\n  }, []);\n  const handleMarkerFormSubmit = values => {\n    const latitude = parseFloat(values.latitude);\n    const longitude = parseFloat(values.longitude);\n    if (isNaN(latitude) || isNaN(longitude)) {\n      // Отображение сообщения об ошибке при неверных координатах\n      message.error('Неверные координаты. Пожалуйста, введите числовые значения для широты и долготы.');\n      return;\n    }\n\n    // Создание нового объекта маркера\n    const newMarker = {\n      name: values.name,\n      coordinates: [latitude, longitude]\n    };\n\n    // Обновление состояния маркеров и сохранение в localStorage\n    const updatedMarkers = [...markers, newMarker];\n    localStorage.setItem('markers', JSON.stringify(updatedMarkers));\n    setMarkers(updatedMarkers);\n\n    // Скрытие модального окна после добавления маркера\n    setIsModalVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100%',\n        height: '90vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setIsModalVisible(true),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\",\n      open: isModalVisible,\n      onCancel: () => setIsModalVisible(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: handleMarkerFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Введите название'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u0428\\u0438\\u0440\\u043E\\u0442\\u0430\",\n          name: \"latitude\",\n          rules: [{\n            required: true,\n            message: 'Введите широту'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\u0414\\u043E\\u043B\\u0433\\u043E\\u0442\\u0430\",\n          name: \"longitude\",\n          rules: [{\n            required: true,\n            message: 'Введите долготу'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"T597kxGM3QXIiRkOO5OjxmaMAsI=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","Form","Input","message","L","markerIconUrl","jsxDEV","_jsxDEV","Map","_s","markers","setMarkers","name","coordinates","isModalVisible","setIsModalVisible","storedMarkers","JSON","parse","localStorage","getItem","map","setView","tileLayer","attribution","maxZoom","addTo","markerIcon","icon","iconUrl","iconSize","forEach","markerData","marker","bindPopup","remove","handleMarkerFormSubmit","values","latitude","parseFloat","longitude","isNaN","error","newMarker","updatedMarkers","setItem","stringify","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginTop","type","onClick","title","open","onCancel","footer","onFinish","Item","label","rules","required","htmlType","_c","$RefreshReg$"],"sources":["D:/map/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Modal, Form, Input, message } from 'antd';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIconUrl from './marker.png';\n\nconst Map = () => {\n  // Состояние переменных\n  const [markers, setMarkers] = useState([\n    // Исходные маркеры\n    {\n      name: 'ТЦ Горизонт',\n      coordinates: [47.259301, 39.719791],\n    },\n    {\n      name: 'ИВТиПТ',\n      coordinates: [47.218953, 39.627433],\n    },\n    {\n      name: 'Библиотека',\n      coordinates: [47.228379, 39.726662],\n    },\n    {\n      name: 'Правительство Ростовской области',\n      coordinates: [47.220835, 39.720871],\n    },\n    {\n      name: 'Собор Пресвятой Богородицы',\n      coordinates: [47.217253, 39.712026],\n    },\n  ]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  useEffect(() => {\n    // Загрузка маркеров из localStorage или использование исходных маркеров\n    const storedMarkers = JSON.parse(localStorage.getItem('markers')) || markers;\n    setMarkers(storedMarkers);\n\n    // Инициализация карты Leaflet\n    const map = L.map('map').setView([47.2357, 39.7015], 12);\n\n    // Добавление слоя тайлов OpenStreetMap\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      maxZoom: 20,\n    }).addTo(map);\n\n    // Создание пользовательской иконки маркера\n    const markerIcon = L.icon({\n      iconUrl: markerIconUrl,\n      iconSize: [32, 40],\n    });\n\n    // Добавление маркеров на карту\n    storedMarkers.forEach(markerData => {\n      const { name, coordinates } = markerData;\n      const marker = L.marker(coordinates, { icon: markerIcon }).addTo(map);\n      marker.bindPopup(name);\n    });\n\n    // Функция очистки для удаления карты при размонтировании компонента\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  const handleMarkerFormSubmit = values => {\n    const latitude = parseFloat(values.latitude);\n    const longitude = parseFloat(values.longitude);\n\n    if (isNaN(latitude) || isNaN(longitude)) {\n      // Отображение сообщения об ошибке при неверных координатах\n      message.error('Неверные координаты. Пожалуйста, введите числовые значения для широты и долготы.');\n      return;\n    }\n\n    // Создание нового объекта маркера\n    const newMarker = {\n      name: values.name,\n      coordinates: [latitude, longitude],\n    };\n\n    // Обновление состояния маркеров и сохранение в localStorage\n    const updatedMarkers = [...markers, newMarker];\n    localStorage.setItem('markers', JSON.stringify(updatedMarkers));\n    setMarkers(updatedMarkers);\n\n    // Скрытие модального окна после добавления маркера\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div>\n      <div id=\"map\" style={{ width: '100%', height: '90vh' }} />\n\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n        <Button type=\"primary\" onClick={() => setIsModalVisible(true)}>Добавить объект</Button>\n      </div>\n\n      <Modal\n        title=\"Добавить объект\"\n        open={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        footer={null}\n      >\n        <Form onFinish={handleMarkerFormSubmit}>\n          <Form.Item label=\"Название\" name=\"name\" rules={[{ required: true, message: 'Введите название' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Широта\" name=\"latitude\" rules={[{ required: true, message: 'Введите широту' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Долгота\" name=\"longitude\" rules={[{ required: true, message: 'Введите долготу' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">Добавить</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}